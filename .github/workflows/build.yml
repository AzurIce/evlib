name: Maturin Build

on:
  push:
    branches: [main, master]
    paths:
      - "**.rs"
      - "**.py"
      - "Cargo.toml"
      - "Cargo.lock"
      - "pyproject.toml"
      - ".github/workflows/build.yml"
      - ".github/actions/**"
    tags:
      - "*"
      - "!v*.*.*"  # Exclude version tags as they're handled by release.yml
  pull_request:
    paths:
      - "**.rs"
      - "**.py"
      - "Cargo.toml"
      - "Cargo.lock"
      - "pyproject.toml"
      - ".github/workflows/build.yml"
      - ".github/actions/**"
  workflow_dispatch:

jobs:
  develop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # 1) Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # 1.5) Cache Rust dependencies
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}
          cache-targets: true

      # 2) Setup dependencies with composite action
      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies
        with:
          python-version: '3.12'
          os: ${{ matrix.os }}

      # 3) Install maturin inside the venv
      - name: Install maturin
        run: |
          source .venv/bin/activate
          uv pip install maturin

      # 5) Build & install the extension - first try build.sh, then fallback to maturin
      - name: Build with build.sh
        run: |
          chmod +x .github/scripts/build.sh
          .github/scripts/build.sh || echo "Direct build failed, falling back to maturin"

      - name: Develop with maturin (fallback)
        if: ${{ failure() }}
        run: uv run maturin develop --release # uv run => activates .venv, satisfies maturin develop
