name: Python

on:
  push:
    branches: [main, master]
    paths:
      - "**.py"
      - "**.rs"
      - "**.ipynb"
      - "docs/**"
      - "README.md"
      - "pyproject.toml"
      - "pytest.ini"
  pull_request:
    paths:
      - "**.py"
      - "**.rs"
      - "**.ipynb"
      - "docs/**"
      - "README.md"
      - "pyproject.toml"
      - "pytest.ini"
  workflow_dispatch:

jobs:
  python-tests:
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ matrix.os }}-${{ matrix.python-version }}

      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies
        with:
          python-version: ${{ matrix.python-version }}
          enable-gstreamer: "true"
          os: ${{ matrix.os }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install .[all]

      - name: Run tests
        run: |
          source .venv/bin/activate
          uv run pytest -v tests/ -m "not slow and not integration" --maxfail=5
          uv run pytest --nbmake examples/*.ipynb -v --no-cov

      - name: Test documentation examples
        run: |
          source .venv/bin/activate
          uv run pytest --markdown-docs README.md docs/ -v --tb=short --maxfail=10

      - name: Generate coverage report
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        run: |
          source .venv/bin/activate
          uv run pytest --cov=evlib --cov-report=xml -v tests/ -m "not slow and not integration"

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false
