[build-system]
requires = ["maturin>=1.3.2"]
build-backend = "maturin"

[project]
name = "evlib"
description = "Python bindings for event camera utilities"
readme = "README.md"
authors = [
  { name = "Tarek Allam", email = "t.allam.jr@gmail.com" },
]
license = { file = "LICENSE.md" }
requires-python = ">=3.10"
classifiers = [
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Rust",
  "Programming Language :: Rust",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
  "numpy >= 1.24.0",
]

dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "maturin",
    "pytest >= 7.0.0",
    "pytest-benchmark",
    "pytest-cov",
    "nbmake",
    "pytest-xdist",
    "codecov",
    "twine",
    "tqdm>=4.67.1",
    "h5py>=3.8.0",
    "pytest-markdown-docs>=0.9.0",
]
polars = ["polars >= 1.30.0"]
plot = ["matplotlib >= 3.7.0", "opencv-python>=4.8.0", "seaborn>=0.13.2",]
jupyter = ["jupyter >= 1.0.0"]
torch = ["torch >= 2.0.0"]

# All
all = [
  "evlib[dev,plot,jupyter,torch,polars]",
]

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"
module-name = "evlib"
# Strip the library for minimum file size
strip = true
# Optionally include extra files in sdist or wheel
include = [{ path = "rust-toolchain.toml", format = "sdist" }, { path = "dist", format = ["sdist", "wheel"]} ]

[tool.pytest.ini_options]
testpaths = ["tests", "docs"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
    "docs: marks tests as documentation tests",
]
addopts = [
    "--markdown-docs",
    "--markdown-docs-dir=docs",
]

[tool.black]
line-length = 110

[tool.isort]
profile = "black"
line_length = 110
remove_unused_imports = false

[tool.ruff]
ignore = ["F401"]  # F401 = unused imports
line-length = 110

[tool.pytest-markdown-docs]
# Configuration for pytest-markdown-docs
docs_dir = "docs"
ignore_glob = [
    "index.md",
    "development/releases.md",
    "development/contributing.md",
    "development/testing.md",
]
